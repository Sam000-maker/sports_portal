# Generated by Django 5.1.11 on 2025-09-20 11:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('facilities', '0001_initial'),
        ('players', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_no', models.PositiveSmallIntegerField(default=1)),
                ('group_label', models.CharField(blank=True, max_length=8)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('walkover', 'Walkover')], default='scheduled', max_length=16)),
                ('officials', models.CharField(blank=True, max_length=200)),
                ('result', models.JSONField(blank=True, null=True)),
                ('team_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='matches_as_a', to='players.team')),
                ('team_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='matches_as_b', to='players.team')),
                ('venue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches', to='facilities.venue')),
            ],
            options={
                'ordering': ['tournament_id', 'round_no', 'scheduled_at'],
            },
        ),
        migrations.CreateModel(
            name='Lineup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lineups', to='players.team')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lineups', to='tournaments.match')),
            ],
            options={
                'unique_together': {('match', 'team')},
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('ttype', models.CharField(choices=[('round_robin', 'Round Robin'), ('single_elim', 'Single Elimination'), ('groups_ko', 'Groups + Knockout')], default='round_robin', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tournaments_created', to=settings.AUTH_USER_MODEL)),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournaments', to='accounts.sport')),
            ],
            options={
                'ordering': ['-start_date', 'name'],
                'unique_together': {('name', 'sport', 'start_date')},
            },
        ),
        migrations.AddField(
            model_name='match',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='tournaments.tournament'),
        ),
        migrations.CreateModel(
            name='LineupEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_bench', models.BooleanField(default=False)),
                ('lineup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='tournaments.lineup')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='players.position')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['is_bench', 'position__code', 'user__first_name'],
                'unique_together': {('lineup', 'user')},
            },
        ),
        migrations.CreateModel(
            name='TournamentTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seed', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_entries', to='players.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_teams', to='tournaments.tournament')),
            ],
            options={
                'ordering': ['tournament_id', 'seed', 'team__name'],
                'constraints': [models.UniqueConstraint(fields=('tournament', 'team'), name='unique_team_per_tournament')],
            },
        ),
    ]
